syntax = "proto3";

option go_package = "./todo";

package todo;

// サービスの定義
service TodoService {
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
    rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);
    rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
    rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
    rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);
}

// タスクのデータ構造
message Task {
    int32 id = 1;
    string title = 2;
    string description = 3;
    bool completed = 4;
    string createdAt = 5;
    string updatedAt = 6;
}

// タスクの作成リクエスト
message CreateTaskRequest {
    string title = 1;
    string description = 2;
}

// タスクの作成レスポンス
message CreateTaskResponse {
    Task task = 1;
}

// タスク一覧取得リクエスト
message ListTasksRequest {}

// タスク一覧取得レスポンス
message ListTasksResponse {
    repeated Task tasks = 1;
}

// 単一タスク取得リクエスト
message GetTaskRequest {
    int32 id = 1;
}

// 単一タスク取得レスポンス
message GetTaskResponse {
    Task task = 1;
}

// タスク更新リクエスト
message UpdateTaskRequest {
    int32 id = 1;
    string title = 2;
    string description = 3;
    bool completed = 4;
}

// タスク更新レスポンス
message UpdateTaskResponse {
    Task task = 1;
}

// タスク削除リクエスト
message DeleteTaskRequest {
    int32 id = 1;
}

// タスク削除レスポンス
message DeleteTaskResponse {
    string message = 1; // e.g., "Task deleted successfully."
}
